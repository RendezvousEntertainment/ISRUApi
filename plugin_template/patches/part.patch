@use "builtin:debug";
@use "VSwift:*";
@use constants;

:parts #isru_drill_1v {
    $drillRate: 0.05;
    +Module_Mining {
        +Data_Mining {
            $log: debug-log("ISRU module added");
            +MiningFormulaDefinitions {
                InternalName: MiningFormulaDefinitions;
                FormulaLocalizationKey: "ISRU/Formulas/Regolith";
                InputResources: [
                    {
                        Rate: 5,
                        ResourceName: ElectricCharge,
                        AcceptanceThreshold: 0.00000001
                    }
                ];
                OutputResources: [
                    {
                        Rate: $drillRate,
                        ResourceName: Regolith,
                        AcceptanceThreshold: 0.00000001
                    },
                    {
                        Rate: $drillRate,
                        ResourceName: Nickel,
                        AcceptanceThreshold: 0.00000001
                    }
                ];
                AcceptanceThreshold: 0.000001;
            }
            $log: debug-log("ISRU MiningFormulaDefinitions added");
        }
    }
    resourceSummary: {
        Consumes: [
            "ElectricCharge"
        ],
        Generates: [
            "Regolith"
        ],
        Contains: []
    };
}

:parts #fueltank_1v_inline_methalox_1x1 {
    resourceContainers: [
        {
            name: "Ore",
            capacityUnits: 10,
            initialUnits: 0,
            NonStageable: true
        }
    ];
    $log: debug-log("ISRU Ore ressource added");
    resourceSummary: {
        Consumes: null,
        Generates: null,
        Contains: [
            "Ore"
        ]
    };
    $log: debug-log("ISRU Ore ressource added bis");
}

:parts #isru_tank_inline_1v_regolith {
  $partVolume: 2.6;
  @include part-switch() {
    +TankType {
      VariantSetLocalizationKey: "ISRU/Variants/TankType";
// in Unity: CapacityUnits = volume x alumiunium density = 2.6 x 2.7 = 7.0
      +Aluminium {
        VariantLocalizationKey: "Resource/DisplayName/Aluminium";
        +TransformActivator {
          Transforms: [aluminium];
        }
      }
      +Iron {
        VariantLocalizationKey: "Resource/DisplayName/Iron";
        +TransformActivator {
          Transforms: [iron];
        }
        +ResourceContainerAdder {
          Containers: [
            {
              Name: "Iron",
              CapacityUnits: $partVolume * $IRON_DENSITY,
              InitialUnits: 0.0
            }
          ];
        }
        +ResourceContainerRemover {
          Containers: [Aluminium];
        }
      }
      +Nickel {
        VariantLocalizationKey: "Resource/DisplayName/Nickel";
        +TransformActivator {
          Transforms: [nickel];
        }
        +ResourceContainerAdder {
          Containers: [
            {
              Name: "Nickel",
              CapacityUnits: $partVolume * $NICKEL_DENSITY,
              InitialUnits: 0.0
            }
          ];
        }
        +ResourceContainerRemover {
          Containers: [Aluminium];
        }
      }
      +Regolith {
        VariantLocalizationKey: "Resource/DisplayName/Regolith";
        +TransformActivator {
          Transforms: [regolith];
        }
        +ResourceContainerAdder {
          Containers: [
            {
              Name: "Regolith",
              CapacityUnits: $partVolume * $REGOLITH_DENSITY,
              InitialUnits: 0.0
            }
          ];
        }
        +ResourceContainerRemover {
          Containers: [Aluminium];
        }
      }
      +Titanium {
        VariantLocalizationKey: "Resource/DisplayName/Titanium";
        +TransformActivator {
          Transforms: [titanium];
        }
        +ResourceContainerAdder {
          Containers: [
            {
              Name: "Titanium",
              CapacityUnits: $partVolume * $TITANIUM_DENSITY,
              InitialUnits: 0.0
            }
          ];
        }
        +ResourceContainerRemover {
          Containers: [Aluminium];
        }
      }
    }
  }
}

:parts #isru_tank_inline_2v_regolith {
  $partVolume: 20.0;
  @include part-switch() {
    +TankType {
      VariantSetLocalizationKey: "ISRU/Variants/TankType";
// in Unity: CapacityUnits = volume x alumiunium density = 20.0 x 2.7 = 54.0
      +Aluminium {
        VariantLocalizationKey: "Resource/DisplayName/Aluminium";
        +TransformActivator {
          Transforms: [aluminium];
        }
      }
      +Iron {
        VariantLocalizationKey: "Resource/DisplayName/Iron";
        +TransformActivator {
          Transforms: [iron];
        }
        +ResourceContainerAdder {
          Containers: [
            {
              Name: "Iron",
              CapacityUnits: $partVolume * $IRON_DENSITY,
              InitialUnits: 0.0
            }
          ];
        }
        +ResourceContainerRemover {
          Containers: [Aluminium];
        }
      }
      +Nickel {
        VariantLocalizationKey: "Resource/DisplayName/Nickel";
        +TransformActivator {
          Transforms: [nickel];
        }
        +ResourceContainerAdder {
          Containers: [
            {
              Name: "Nickel",
              CapacityUnits: $partVolume * $NICKEL_DENSITY,
              InitialUnits: 0.0
            }
          ];
        }
        +ResourceContainerRemover {
          Containers: [Aluminium];
        }
      }
      +Regolith {
        VariantLocalizationKey: "Resource/DisplayName/Regolith";
        +TransformActivator {
          Transforms: [regolith];
        }
        +ResourceContainerAdder {
          Containers: [
            {
              Name: "Regolith",
              CapacityUnits: $partVolume * $REGOLITH_DENSITY,
              InitialUnits: 0.0
            }
          ];
        }
        +ResourceContainerRemover {
          Containers: [Aluminium];
        }
      }
      +Titanium {
        VariantLocalizationKey: "Resource/DisplayName/Titanium";
        +TransformActivator {
          Transforms: [titanium];
        }
        +ResourceContainerAdder {
          Containers: [
            {
              Name: "Titanium",
              CapacityUnits: $partVolume * $TITANIUM_DENSITY,
              InitialUnits: 0.0
            }
          ];
        }
        +ResourceContainerRemover {
          Containers: [Aluminium];
        }
      }
    }
  }
}

:parts #isru_tank_radial_1v_regolith {
  $partVolume: 0.8;
  @include part-switch() {
    +TankType {
      VariantSetLocalizationKey: "ISRU/Variants/TankType";
// in Unity: CapacityUnits = volume x alumiunium density = 0.8 x 2.7 = 2.2
      +Aluminium {
        VariantLocalizationKey: "Resource/DisplayName/Aluminium";
        +TransformActivator {
          Transforms: [aluminium];
        }
      }
      +Iron {
        VariantLocalizationKey: "Resource/DisplayName/Iron";
        +TransformActivator {
          Transforms: [iron];
        }
        +ResourceContainerAdder {
          Containers: [
            {
              Name: "Iron",
              CapacityUnits: $partVolume * $IRON_DENSITY,
              InitialUnits: 0.0
            }
          ];
        }
        +ResourceContainerRemover {
          Containers: [Aluminium];
        }
      }
      +Nickel {
        VariantLocalizationKey: "Resource/DisplayName/Nickel";
        +TransformActivator {
          Transforms: [nickel];
        }
        +ResourceContainerAdder {
          Containers: [
            {
              Name: "Nickel",
              CapacityUnits: $partVolume * $NICKEL_DENSITY,
              InitialUnits: 0.0
            }
          ];
        }
        +ResourceContainerRemover {
          Containers: [Aluminium];
        }
      }
      +Regolith {
        VariantLocalizationKey: "Resource/DisplayName/Regolith";
        +TransformActivator {
          Transforms: [regolith];
        }
        +ResourceContainerAdder {
          Containers: [
            {
              Name: "Regolith",
              CapacityUnits: $partVolume * $REGOLITH_DENSITY,
              InitialUnits: 0.0
            }
          ];
        }
        +ResourceContainerRemover {
          Containers: [Aluminium];
        }
      }
      +Titanium {
        VariantLocalizationKey: "Resource/DisplayName/Titanium";
        +TransformActivator {
          Transforms: [titanium];
        }
        +ResourceContainerAdder {
          Containers: [
            {
              Name: "Titanium",
              CapacityUnits: $partVolume * $TITANIUM_DENSITY,
              InitialUnits: 0.0
            }
          ];
        }
        +ResourceContainerRemover {
          Containers: [Aluminium];
        }
      }
    }
  }
}

:parts #antenna_0v_dish_ra-2 {
    +Module_ResourceScanner {
        +Data_ResourceScanner {
            $log: debug-log("ISRU Resource Scanner added");
            RequiredResources: [
                {
                    Rate: 15,
                    ResourceName: ElectricCharge,
                    AcceptanceThreshold: 0.1
                }
            ];
            ScannableResources: [
                {
                    Rate: 1.0,
                    ResourceName: Iron,
                    AcceptanceThreshold: 0.1
                },
                {
                    Rate: 1.0,
                    ResourceName: Regolith,
                    AcceptanceThreshold: 0.1
                },
                {
                    Rate: 1.0,
                    ResourceName: Water,
                    AcceptanceThreshold: 0.1
                }
            ];
            TimeToComplete: 5.0;
        }
    }
}

:parts #antenna_0v_dish_ra-15 {
    +Module_ResourceScanner {
        +Data_ResourceScanner {
            RequiredResources: [
                {
                    Rate: 30,
                    ResourceName: ElectricCharge,
                    AcceptanceThreshold: 0.1
                }
            ];
            ScannableResources: [
                {
                    Rate: 1.0,
                    ResourceName: Methane,
                    AcceptanceThreshold: 0.1
                },
                {
                    Rate: 1.0,
                    ResourceName: Nickel,
                    AcceptanceThreshold: 0.1
                },
                {
                    Rate: 1.0,
                    ResourceName: Quartz,
                    AcceptanceThreshold: 0.1
                }
            ];
            TimeToComplete: 7.0;
        }
    }
}

// add the PAM header for all resource scanners
:parts .Module_ResourceScanner {
    PAMModuleVisualsOverride +: [
        {
            PartComponentModuleName: "PartComponentModule_ResourceScanner",
            ModuleDisplayName: "PartModules/ResourceScanner/Name",
            ShowHeader: true,
            ShowFooter: true
        }
    ];
}